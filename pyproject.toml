[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "tracerite"
dynamic = ["version"]
description = "Human-readable HTML tracebacks for Python exceptions"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Sanic Community", email = "tronic@noreply.users.github.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Debuggers",
]
requires-python = ">=3.8"
dependencies = [
    "html5tagger>=1.2.1",
]

[project.urls]
Homepage = "https://github.com/sanic-org/tracerite"
Repository = "https://github.com/sanic-org/tracerite"
Issues = "https://github.com/sanic-org/tracerite/issues"

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest-cov",
    "mypy",
]

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"

[tool.hatch.build.targets.wheel]
packages = ["tracerite"]

[tool.hatch.build.targets.sdist]
include = [
    "/tracerite",
    "/README.md",
    "/LICENSE",
]

# Ruff configuration
[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["tracerite"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tracerite",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
